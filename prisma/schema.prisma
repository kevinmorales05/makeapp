// useful npx prisma migrate dev --name init 
// npx prisma studio
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x", "linux-musl", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  bio           String?
  email         String?   @unique
  emailVerified DateTime?

  image          String?
  hashedPassword String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt

  favoriteIds Int[]
  accounts    Account[]
  carts       Cart[]
  reviews     Review[]
}

model Account {
  id                Int     @id @default(autoincrement())
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
}

model Product {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(200)
  description  String
  imageSrc     String
  cost         Float
  promoCost    Float
  bestSeller   Boolean  @default(false)
  kit          Boolean  @default(false)
  weight       String
  farmacState  String
  presentation String
  category     String
  subCategory  String
  color        String   @default("default")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  carts  Cart[] // deleting the Product record will also delete all related Cart records.
  Review Review[] // deleting the Product record will also delete all related Review records.
}

model Cart {
  id Int @id @default(autoincrement())

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int     @unique
  quantity  Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Review {
  id          Int    @id @default(autoincrement())
  rating      Int    @default(0)
  title       String @db.VarChar(100)
  description String @db.VarChar(150)

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int     @unique
}
